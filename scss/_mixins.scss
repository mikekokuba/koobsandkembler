// Mixin to control section background and color tint
@mixin background($filename: none, $repeat: no-repeat, $bgsize: cover, $bgcolor: white, $bgattachment: scroll) {
    background: transparent url(#{$filename}) $repeat;
    background-size: $bgsize;
    background-attachment: $bgattachment;

  .tint-wrapper {
    height: 100%;
    // Make this variable
    background-color:$bgcolor;
  }
}

// Mixin used to vertically center elements that have unknown parent element heights
@mixin vertical-align($parent-property: content-wrapper, $content-1: left-content, $content-2: right-content, $content-3: content, $align: middle) {
  .#{$parent-property} {
    display: block;
    // Default Zurb Foundation row padding
    margin: 0 auto;
    // Default Zurb Foundation row width
    max-width: 62.5rem;
    overflow: hidden;
  }

  .#{$content-1}, .#{$content-2}, .#{$content-3} {
    display: block;
    padding: 0 0.9375rem;

    @media #{$medium-up} {
      display: table-cell;
      vertical-align: #{$align};
    }
  }
}

// Mixin for border-radius attribute
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  border-radius: $radius;
  background-clip: padding-box;  /* stops bg color from leaking outside the border: */
}

// Mixin for calc function
@mixin calc($property, $expression) {
  // Default fallback value
  #{$property}: 100%;
  #{$property}: -moz-calc(#{$expression});
  #{$property}: -webkit-calc(#{$expression});
  #{$property}: calc(#{$expression});
}

// Mixin for multi column support
@mixin columns($number) {
  column-count:$number;
  -moz-column-count:$number; /* Firefox */
  -webkit-column-count:$number; /* Safari and Chrome */
}

// Mixin for buttons
@mixin button($bgcolor: $red, $border: none, $padding: 25px) {
  background: $bgcolor;
  border: $border;
  display: block;
  width: 100%;
  margin: 0;
  padding: $padding;
  font-size: 1.5em;
  font-weight: 100;

  &:hover {
    background: darken($bgcolor, 10%);
  }
}